-- Quartz数据库表结构
-- 适用于MySQL 8.0+

-- 删除已存在的表（如果存在）
DROP TABLE IF EXISTS QRTZ_FIRED_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_PAUSED_TRIGGER_GRPS;
DROP TABLE IF EXISTS QRTZ_SCHEDULER_STATE;
DROP TABLE IF EXISTS QRTZ_LOCKS;
DROP TABLE IF EXISTS QRTZ_SIMPLE_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_SIMPROP_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_CRON_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_BLOB_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_TRIGGERS;
DROP TABLE IF EXISTS QRTZ_JOB_DETAILS;
DROP TABLE IF EXISTS QRTZ_CALENDARS;

-- 任务详情表
CREATE TABLE QRTZ_JOB_DETAILS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    JOB_NAME VARCHAR(200) NOT NULL COMMENT '任务名称',
    JOB_GROUP VARCHAR(200) NOT NULL COMMENT '任务分组',
    DESCRIPTION VARCHAR(250) NULL COMMENT '任务描述',
    JOB_CLASS_NAME VARCHAR(250) NOT NULL COMMENT '任务实现类',
    IS_DURABLE VARCHAR(1) NOT NULL COMMENT '是否持久化',
    IS_NONCONCURRENT VARCHAR(1) NOT NULL COMMENT '是否非并发',
    IS_UPDATE_DATA VARCHAR(1) NOT NULL COMMENT '是否更新数据',
    REQUESTS_RECOVERY VARCHAR(1) NOT NULL COMMENT '是否要求恢复',
    JOB_DATA BLOB NULL COMMENT '任务数据',
    PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='任务详情表';

-- 触发器表
CREATE TABLE QRTZ_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    JOB_NAME VARCHAR(200) NOT NULL COMMENT '任务名称',
    JOB_GROUP VARCHAR(200) NOT NULL COMMENT '任务分组',
    DESCRIPTION VARCHAR(250) NULL COMMENT '触发器描述',
    NEXT_FIRE_TIME BIGINT(13) NULL COMMENT '下次触发时间',
    PREV_FIRE_TIME BIGINT(13) NULL COMMENT '上次触发时间',
    PRIORITY INTEGER NULL COMMENT '优先级',
    TRIGGER_STATE VARCHAR(16) NOT NULL COMMENT '触发器状态',
    TRIGGER_TYPE VARCHAR(8) NOT NULL COMMENT '触发器类型',
    START_TIME BIGINT(13) NOT NULL COMMENT '开始时间',
    END_TIME BIGINT(13) NULL COMMENT '结束时间',
    CALENDAR_NAME VARCHAR(200) NULL COMMENT '日历名称',
    MISFIRE_INSTR SMALLINT(2) NULL COMMENT '错过执行策略',
    JOB_DATA BLOB NULL COMMENT '任务数据',
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
        REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME, JOB_NAME, JOB_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='触发器表';

-- 简单触发器表
CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    REPEAT_COUNT BIGINT(7) NOT NULL COMMENT '重复次数',
    REPEAT_INTERVAL BIGINT(12) NOT NULL COMMENT '重复间隔',
    TIMES_TRIGGERED BIGINT(10) NOT NULL COMMENT '已触发次数',
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='简单触发器表';

-- Cron触发器表
CREATE TABLE QRTZ_CRON_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    CRON_EXPRESSION VARCHAR(120) NOT NULL COMMENT 'Cron表达式',
    TIME_ZONE_ID VARCHAR(80) COMMENT '时区ID',
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Cron触发器表';

-- 属性触发器表
CREATE TABLE QRTZ_SIMPROP_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    STR_PROP_1 VARCHAR(512) NULL COMMENT '字符串属性1',
    STR_PROP_2 VARCHAR(512) NULL COMMENT '字符串属性2',
    STR_PROP_3 VARCHAR(512) NULL COMMENT '字符串属性3',
    INT_PROP_1 INT NULL COMMENT '整数属性1',
    INT_PROP_2 INT NULL COMMENT '整数属性2',
    LONG_PROP_1 BIGINT NULL COMMENT '长整数属性1',
    LONG_PROP_2 BIGINT NULL COMMENT '长整数属性2',
    DEC_PROP_1 NUMERIC(13,4) NULL COMMENT '小数属性1',
    DEC_PROP_2 NUMERIC(13,4) NULL COMMENT '小数属性2',
    BOOL_PROP_1 VARCHAR(1) NULL COMMENT '布尔属性1',
    BOOL_PROP_2 VARCHAR(1) NULL COMMENT '布尔属性2',
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='属性触发器表';

-- Blob触发器表
CREATE TABLE QRTZ_BLOB_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    BLOB_DATA BLOB NULL COMMENT 'Blob数据',
    PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    INDEX (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Blob触发器表';

-- 日历表
CREATE TABLE QRTZ_CALENDARS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    CALENDAR_NAME VARCHAR(200) NOT NULL COMMENT '日历名称',
    CALENDAR BLOB NOT NULL COMMENT '日历数据',
    PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='日历表';

-- 暂停的触发器分组表
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='暂停的触发器分组表';

-- 已触发的触发器表
CREATE TABLE QRTZ_FIRED_TRIGGERS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    ENTRY_ID VARCHAR(95) NOT NULL COMMENT '条目ID',
    TRIGGER_NAME VARCHAR(200) NOT NULL COMMENT '触发器名称',
    TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '触发器分组',
    INSTANCE_NAME VARCHAR(200) NOT NULL COMMENT '实例名称',
    FIRED_TIME BIGINT(13) NOT NULL COMMENT '触发时间',
    SCHED_TIME BIGINT(13) NOT NULL COMMENT '调度时间',
    PRIORITY INTEGER NOT NULL COMMENT '优先级',
    STATE VARCHAR(16) NOT NULL COMMENT '状态',
    JOB_NAME VARCHAR(200) NULL COMMENT '任务名称',
    JOB_GROUP VARCHAR(200) NULL COMMENT '任务分组',
    IS_NONCONCURRENT VARCHAR(1) NULL COMMENT '是否非并发',
    REQUESTS_RECOVERY VARCHAR(1) NULL COMMENT '是否要求恢复',
    PRIMARY KEY (SCHED_NAME, ENTRY_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='已触发的触发器表';

-- 调度器状态表
CREATE TABLE QRTZ_SCHEDULER_STATE (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    INSTANCE_NAME VARCHAR(200) NOT NULL COMMENT '实例名称',
    LAST_CHECKIN_TIME BIGINT(13) NOT NULL COMMENT '最后检查时间',
    CHECKIN_INTERVAL BIGINT(13) NOT NULL COMMENT '检查间隔',
    PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='调度器状态表';

-- 锁表
CREATE TABLE QRTZ_LOCKS (
    SCHED_NAME VARCHAR(120) NOT NULL COMMENT '调度器名称',
    LOCK_NAME VARCHAR(40) NOT NULL COMMENT '锁名称',
    PRIMARY KEY (SCHED_NAME, LOCK_NAME)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='锁表';

-- 创建索引
CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME, REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME, JOB_GROUP);
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME, CALENDAR_NAME);
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME, NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME);
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_NAME, JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, JOB_GROUP);
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME, TRIGGER_GROUP);

-- 插入默认锁记录
INSERT INTO QRTZ_LOCKS VALUES('CharterScheduler', 'TRIGGER_ACCESS');
INSERT INTO QRTZ_LOCKS VALUES('CharterScheduler', 'JOB_ACCESS');
INSERT INTO QRTZ_LOCKS VALUES('CharterScheduler', 'CALENDAR_ACCESS');
INSERT INTO QRTZ_LOCKS VALUES('CharterScheduler', 'STATE_ACCESS');
INSERT INTO QRTZ_LOCKS VALUES('CharterScheduler', 'MISFIRE_ACCESS');

-- 提交事务
COMMIT;
server:
  port: 8065

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/charter_website?characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 'root'
    hikari:
      minimum-idle: 10
      idle-timeout: 180000
      maximum-pool-size: 100
      auto-commit: true
      pool-name: MyHikariCP
      max-lifetime: 60000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  data:
    redis:
      host: localhost
      port: 6379
      password: '123456'

  rabbitmq:
    host: localhost
    port: 5672
    username: 'guest'
    password: 'guest'
    virtual-host: /
    publisher-confirm-type: correlated
    publisher-returns: true
    connection-timeout: 15000
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 10
        concurrency: 2
        max-concurrency: 5
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000
          max-interval: 10000
          multiplier: 2.0

  mail:
    host: smtp.163.com
    username: #
    password: #
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true

  servlet:
    multipart:
      max-file-size: 256MB
      max-request-size: 256MB

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: '网站后台中控相关接口'
      paths-to-match: '/api-admin/**'
      packages-to-scan:
        - ink.charter.website.server.admin.sys.controller
        - ink.charter.website.server.admin.blog.controller
        - ink.charter.website.server.admin.home.controller
    - group: '首页相关接口'
      paths-to-match: '/api-home/**'
      packages-to-scan:
        - ink.charter.website.server.home.controller

# Knife4j的增强配置
knife4j:
  enable: true
  setting:
    language: zh_cn
  production: true # 是否生产环境
  basic:
    enable: true
    username: admin
    password: admin

# 文件上传相关配置
upload:
  mode: oss
  oss:
    url: #
    endpoint: #
    accessKeyId: #
    accessKeySecret: #
    bucketName: #

charter:
  version: 1.0.0
  # 认证相关配置
  auth:
    enabled: true   # 是否启用认证
    jwt:
      secret: "charter-secret-jwt"  # JWT密钥
    login:
      max-attempts: 5 # 登录失败最大尝试次数

  # Web API前缀配置
  web:
    api:
      enabled: true # 是否启用API前缀配置
      default-prefix: /api # 默认API前缀
  #      modules: # 模块特定的API前缀配置（下述三个已在默认配置中加上，不需要重复添加配置，放在这里只是做模板）
  #        "*.server.admin.*.controller": /api-admin # 管理后台API前缀
  #        "*.server.home.controller": /api-home # 首页API前缀
  #        "*.server.blog.controller": /api-blog # 博客API前缀

  # 操作日志记录相关配置
  log:
    enabled: true             # 是否启用操作日志记录
    enable-ip-resolve: true   # 是否启用IP地址解析
    ip-resolve-timeout: 3000  # IP地址解析超时时间（毫秒）
    enable-async: true        # 是否启用异步日志
    max-param-length: 2000    # 请求参数最大长度
    max-response-length: 2000 # 响应数据最大长度
    max-error-length: 500     # 错误信息最大长度

  # RabbitMQ中间件配置
  rabbitmq:
    enabled: true
    producer:
      enabled: true
      confirm-enabled: true
      return-enabled: true
      confirm-timeout: 5000
      default-exchange: "charter.exchange"
      default-persistent: true
    consumer:
      enabled: true
      default-concurrency: "1-3"
      default-prefetch-count: 10
      default-ack-mode: "MANUAL"
      default-enable-dlq: true
      default-durable: true
      default-exclusive: false
      default-auto-delete: false
    retry:
      enabled: true
      max-attempts: 3
      initial-interval: 1000
      max-interval: 10000
      multiplier: 2.0
      randomize: true
    dead-letter:
      enabled: true
      exchange: "charter.dlx.exchange"
      queue: "charter.dlx.queue"
      routing-key: "charter.dlx"
      ttl: 86400000  # 24小时
      max-length: 10000
    delay:
      enabled: true
      exchange: "charter.delay.exchange"
      queue: "charter.delay.queue"
      routing-key: "charter.delay"
      max-delay-time: 86400000  # 24小时
      default-delay-time: 60000  # 1分钟